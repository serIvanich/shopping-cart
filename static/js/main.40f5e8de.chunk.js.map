{"version":3,"sources":["ui/features/modals/ModalBuy.module.css","ui/features/items/ItemsViewContainer.module.css","ui/common/modal/Modal.module.css","ui/common/preloader/Preloader.module.css","ui/common/error-snackbar/ErrorSnackbar.module.css","ui/features/items/item/Item.jsx","assecs/image/1486.gif","ui/common/preloader/Preloader.jsx","utils/select-random-items-utils.js","bll/selectors/app-selector.js","bll/common-action/app.js","bll/app-reducer/application-reducer.js","bll/app-reducer/index.js","bll/selectors/items-selector.js","api/project-api.js","utils/error-utils.js","bll/items-reducer/items-reducer.js","bll/items-reducer/index.js","ui/features/items/ItemsViewContainer.jsx","utils/redux-utils.js","ui/common/modal/Modal.js","ui/common/form/input/Input.js","ui/features/modals/ModalBuy.jsx","ui/common/error-snackbar/ErrorSnackbar.jsx","ui/app/App.jsx","bll/store/reducers.js","bll/store/store.js","reportWebVitals.js","index.js","ui/features/items/item/Item.module.css","ui/common/form/input/Input.module.css"],"names":["module","exports","Item","React","memo","item","show","onShowModal","isModalItems","name","category","price","styleModal","s","styleModalItems","className","itemBox","style","fontSize","textTransform","blockWithButton","priceBox","logoPrice","disabled","onClick","Preloader","preloaderContainer","src","preload","alt","getRandomInd","max","Math","floor","random","selectorStatus","state","app","status","selectorError","error","appActions","setAppStatus","createAction","setAppError","slice","createSlice","initialState","reducers","extraReducers","builder","addCase","action","payload","appReducer","reducer","selectorItems","actions","items","itemsArray","instance","axios","create","baseURL","withCredentials","itemsApi","get","then","res","data","formValidator","nameValue","phoneNumberValue","formErrors","setFormErrors","changeFormErrors","errorValue","errorsObj","test","length","handleAsyncServerNetworkError","err","thunkAPI","showError","dispatch","message","rejectWithValue","errors","fieldsErrors","undefined","getItems","createAsyncThunk","param","a","asyncActions","fulfilled","push","itemsReducer","itemsActions","ItemsViewContainer","useState","itemsViews","setItemsViews","useDispatch","useMemo","bindActionCreators","useActions","useEffect","useSelector","itemsSelectors","appSelectors","count","copyItemsArray","newItemsArray","i","index","splice","selectRandomItems","itemsViewContainer","itemsBlock","map","c","buttonContainer","cheapestItem","reduce","pr","Modal","closeModalOnClick","children","modalContainer","modalBox","closeButton","Input","type","onChangeText","onFocusInput","restProps","finalInputClassName","errorInput","generalInput","visibility","inputContainer","onChange","e","currentTarget","value","onFocus","target","textError","hidden","closeError","dataset","ModalBuy","currentItem","setShow","setNameValue","setPhoneNumberValue","nameError","phoneNumberError","isDisabledFormButton","conditionNameError","conditionPhoneNumberError","findError","onBlurInput","resetValue","settingModal","settingModalForm","onSubmit","preventDefault","valueForm","console","log","inputBox","placeholder","onBlur","buttonFormSubmit","ErrorSnackbar","styleSnackbar","App","appError","setCurrentItem","showModalBuy","setShowModalBuy","rootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","prepend","thunk","window","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40f5e8de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingModal\":\"ModalBuy_settingModal__p7kJ2\",\"settingModalForm\":\"ModalBuy_settingModalForm__1W5tA\",\"inputBox\":\"ModalBuy_inputBox__1KbVT\",\"buttonFormSubmit\":\"ModalBuy_buttonFormSubmit__2NPN0\",\"classNameInput\":\"ModalBuy_classNameInput__3Tj5i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemsViewContainer\":\"ItemsViewContainer_itemsViewContainer__2D5Yb\",\"itemsBlock\":\"ItemsViewContainer_itemsBlock__rNRAu\",\"buttonContainer\":\"ItemsViewContainer_buttonContainer__2kR4F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"Modal_modalContainer__3jUqd\",\"modalBox\":\"Modal_modalBox__2QdsE\",\"closeButton\":\"Modal_closeButton__3vORo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"Preloader_preloaderContainer__JePBU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"styleSnackbar\":\"ErrorSnackbar_styleSnackbar__3XZBv\"};","import React from 'react';\r\nimport s from './Item.module.css'\r\n\r\nexport const Item = React.memo(({item, show, onShowModal, isModalItems}) => {\r\n\r\n    const {name, category, price} = item\r\n\r\n    const textStyle = {\r\n        fontSize: '16px',\r\n        textTransform: 'uppercase',\r\n    }\r\n\r\n    const styleModal = isModalItems ? s.styleModalItems : ''\r\n\r\n    const onButtonClick = () => {\r\n        onShowModal(item)\r\n    }\r\n\r\n    return (\r\n        <div className={`${s.itemBox} ${styleModal}`} >\r\n            <div style={textStyle}>\r\n                {category}\r\n            </div>\r\n            <div style={{fontSize: '40px'}}>\r\n                {name}\r\n            </div>\r\n            <div className={s.blockWithButton}>\r\n                <div className={s.priceBox}><span className={s.logoPrice}>$</span>{price}</div>\r\n                {!isModalItems && <button  disabled={show} onClick={onButtonClick}>\r\n                    {show ? '(=)' : 'buy'}\r\n                </button>}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","export default __webpack_public_path__ + \"static/media/1486.279ed7ee.gif\";","import React from 'react'\r\nimport preload from '../../../assecs/image/1486.gif'\r\nimport s from './Preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n\r\n    return (\r\n        <div className={s.preloaderContainer}>\r\n            <img src={preload} alt={'preload...'}/>\r\n        </div>)\r\n}\r\n","export const selectRandomItems = (itemsArray, count) => {\r\n    const copyItemsArray = [...itemsArray]\r\n    let newItemsArray = []\r\n    let i = 0\r\n    if (0 < count < itemsArray.length) {\r\n        while (i < count) {\r\n            ++i\r\n            const index = getRandomInd(copyItemsArray.length)\r\n            newItemsArray.push(copyItemsArray[index])\r\n            copyItemsArray.splice(index, 1)\r\n        }\r\n    } else {\r\n        newItemsArray = itemsArray.slice(i, count)\r\n    }\r\n    return newItemsArray\r\n}\r\nconst getRandomInd = (max) => {\r\n    return Math.floor(Math.random() * max);\r\n}\r\n","\r\n\r\nexport const selectorStatus = state => state.app.status\r\nexport const selectorError = state => state.app.error\r\n","import {createAction} from '@reduxjs/toolkit';\r\n\r\nconst setAppStatus = createAction('app/setAppStatus')\r\nconst setAppError = createAction('app/setAppError')\r\n\r\nexport const appActions = {\r\n    setAppStatus,\r\n    setAppError,\r\n}","import {createSlice} from '@reduxjs/toolkit';\r\nimport {appActions} from '../common-action/app';\r\n\r\nexport const slice = createSlice({\r\n    name: 'app',\r\n    initialState: {\r\n        status: 'idle',\r\n        error: '',\r\n    },\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(appActions.setAppStatus, (state, action) => {\r\n                state.status = action.payload.status\r\n            })\r\n            .addCase(appActions.setAppError, (state, action) => {\r\n                state.error = action.payload.error\r\n            })\r\n    }\r\n})\r\n","import * as appSelectors from '../selectors/app-selector'\r\nimport {slice} from './application-reducer'\r\n\r\nconst appReducer = slice.reducer\r\n\r\nconst appActions = {\r\n    ...slice.actions\r\n}\r\n\r\nexport {\r\n    appSelectors,\r\n    appReducer,\r\n    appActions,\r\n}\r\n\r\n","\r\nexport const selectorItems = state => state.items.itemsArray\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://run.mocky.io/v3/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const itemsApi = {\r\n    getItems() {\r\n        return instance.get('b7d36eea-0b3f-414a-ba44-711b5f5e528e')\r\n            .then(res => res.data)\r\n    }\r\n}\r\n\r\n\r\n","import {appActions} from '../bll/common-action/app';\r\n\r\nexport const formValidator = (name, nameValue, phoneNumberValue, formErrors, setFormErrors) => {\r\n\r\n    const changeFormErrors = (name, errorValue) => {\r\n        setFormErrors((errorsObj) => ({...errorsObj, [`${name}Error`]: errorValue}))\r\n    }\r\n\r\n    if (name === 'name') {\r\n        if (!nameValue) {\r\n            changeFormErrors(name, 'This field in required')\r\n        } else if (!/^[a-zA-Z]+$/i.test(nameValue)) {\r\n            changeFormErrors(name, 'Only letters allowed')\r\n        }\r\n    }\r\n    if (name === 'phoneNumber') {\r\n        if (!phoneNumberValue) {\r\n            changeFormErrors(name, 'This field in required')\r\n        } else if (!/^[0-9]+$/i.test(phoneNumberValue)) {\r\n            changeFormErrors(name, 'Only numbers allowed')\r\n        } else if (phoneNumberValue.length !== 12) {\r\n            changeFormErrors(name, 'Should contain 12 characters')\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleAsyncServerNetworkError = (err, thunkAPI, showError = true) => {\r\n\r\n    if (showError) {\r\n        thunkAPI.dispatch(appActions.setAppError({error: err.message ? err.message : 'Some error occurred'}))\r\n    }\r\n\r\n    thunkAPI.dispatch(appActions.setAppStatus({status: 'failed'}))\r\n    return thunkAPI.rejectWithValue({errors: [err.message], fieldsErrors: undefined})\r\n}","import {itemsApi} from '../../api/project-api';\r\nimport {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport {appActions} from '../common-action/app';\r\nimport {handleAsyncServerNetworkError} from '../../utils/error-utils';\r\n\r\nconst getItems = createAsyncThunk('items/getItems',\r\n    async (param, thunkAPI) => {\r\n        thunkAPI.dispatch(appActions.setAppStatus({status: 'loading'}))\r\n        try {\r\n            const data = await itemsApi.getItems()\r\n            thunkAPI.dispatch(appActions.setAppStatus({status: 'success'}))\r\n            return data\r\n        } catch (e) {\r\n            return handleAsyncServerNetworkError(e, thunkAPI)\r\n        }\r\n    })\r\n\r\nexport const asyncActions = {\r\n    getItems: getItems,\r\n}\r\n\r\nexport const slice = createSlice({\r\n    name: 'items',\r\n    initialState: {\r\n        itemsArray: [],\r\n    },\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getItems.fulfilled,\r\n            (state, action) => {\r\n                state.itemsArray.push(...action.payload)\r\n            }\r\n        )\r\n    }\r\n})\r\n","import * as itemsSelectors from '../selectors/items-selector'\r\nimport {slice, asyncActions} from './items-reducer'\r\n\r\nconst itemsReducer = slice.reducer\r\n\r\nconst itemsActions = {\r\n    ...asyncActions,\r\n    ...slice.actions\r\n}\r\n\r\nexport {\r\n    itemsSelectors,\r\n    itemsReducer,\r\n    itemsActions,\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Item} from './item/Item';\r\nimport {useSelector} from 'react-redux';\r\nimport s from './ItemsViewContainer.module.css'\r\nimport {Preloader} from '../../common/preloader/Preloader';\r\nimport {useActions} from '../../../utils/redux-utils';\r\nimport {selectRandomItems} from '../../../utils/select-random-items-utils';\r\nimport {appSelectors} from '../../../bll/app-reducer';\r\nimport {itemsActions, itemsSelectors} from '../../../bll/items-reducer';\r\n\r\nexport const ItemsViewContainer = ({show, onShowModal}) => {\r\n\r\n    // items for views. need paginator?!\r\n    const [itemsViews, setItemsViews] = useState([])\r\n\r\n    const {getItems} = useActions(itemsActions)\r\n\r\n    useEffect(() => {\r\n        getItems()\r\n    }, [getItems])\r\n\r\n    const items = useSelector(itemsSelectors.selectorItems)\r\n    const status = useSelector(appSelectors.selectorStatus)\r\n\r\n    if (!items.length) {\r\n        return <Preloader/>\r\n    } else {\r\n        !itemsViews.length && setItemsViews(() => selectRandomItems(items, 6))\r\n    }\r\n\r\n    const onClickButtonCheapest = () => {\r\n        const cheapestItem = itemsViews.reduce((pr, c) => pr.price && pr.price < c.price ? pr : c, {})\r\n        onShowModal(cheapestItem)\r\n    }\r\n\r\n    return (\r\n        <div className={s.itemsViewContainer}>\r\n            {status === 'loading' && <Preloader/>}\r\n            <div className={s.itemsBlock}>\r\n                {itemsViews.map((c, i) => {\r\n                    return <Item key={i} item={c} show={show} onShowModal={onShowModal}/>\r\n                })}\r\n            </div>\r\n            <button className={s.buttonContainer} onClick={onClickButtonCheapest}\r\n                    disabled={status === 'failed' || show}>\r\n                Buy cheapest\r\n            </button>\r\n        </div>\r\n    )\r\n}","import {useDispatch} from 'react-redux';\r\nimport {useMemo} from 'react';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nexport function useActions(actions) {\r\n    const dispatch = useDispatch()\r\n\r\n    const boundActions = useMemo(() => {\r\n        return bindActionCreators(actions, dispatch)\r\n    }, [actions, dispatch])\r\n\r\n    return boundActions\r\n}\r\n","import React from 'react';\r\nimport s from './Modal.module.css'\r\n\r\n\r\nconst Modal = React.memo(({\r\n                               closeModalOnClick,  show, children,\r\n                          }) => {\r\n\r\n    if (!show) return null;\r\n\r\n    return (\r\n\r\n        <div className={s.modalContainer}>\r\n            <div className={s.modalBox}>\r\n                {children}\r\n                <div className={s.closeButton}\r\n                     onClick={closeModalOnClick}>\r\n                    x\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n})\r\n\r\nexport default Modal;\r\n\r\n","import React from 'react'\r\nimport s from './Input.module.css'\r\n\r\nconst Input = React.memo(({type, error, name,  onChangeText,\r\n                    onFocusInput, ...restProps}) => {\r\n\r\n\r\n    const finalInputClassName = error ? s.errorInput : s.generalInput\r\n    const visibility = !error ? 'visibility' : ''\r\n\r\n\r\n    const onChangeCallback = (e) => {\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n\r\n    const onClickCloseCallback = (e) => {\r\n\r\n        const name = e.target.dataset.name\r\n        onFocusInput(name, true)\r\n    }\r\n\r\n    const onFocusCallback = (e) => {\r\n        onFocusInput(e.target.name)\r\n    }\r\n\r\n    return (\r\n        <div className={s.inputContainer}>\r\n            <input\r\n                type={type}\r\n                name={name}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                onFocus={onFocusCallback}\r\n                {...restProps}\r\n            />\r\n            <small className={s.textError} hidden={visibility}>\r\n                {error}\r\n            </small>\r\n            <div className={s.closeError} onClick={onClickCloseCallback}\r\n                 hidden={visibility} data-name={name}>х</div>\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Input\r\n","import React, {useState} from 'react';\r\nimport Modal from '../../common/modal/Modal';\r\nimport {Item} from '../items/item/Item';\r\nimport s from './ModalBuy.module.css';\r\nimport {formValidator} from '../../../utils/error-utils';\r\nimport Input from \"../../common/form/input/Input\";\r\n\r\nexport const ModalBuy = React.memo(({currentItem, show, setShow}) => {\r\n\r\n    const [nameValue, setNameValue] = useState('')\r\n    const [phoneNumberValue, setPhoneNumberValue] = useState('')\r\n    const [formErrors, setFormErrors] = useState({nameError: '', phoneNumberError: ''})\r\n    let isDisabledFormButton = false\r\n\r\n    const conditionNameError = !nameValue || !!formErrors.nameError\r\n    const conditionPhoneNumberError = !phoneNumberValue || !!formErrors.phoneNumberError\r\n    const findError = conditionNameError || conditionPhoneNumberError\r\n\r\n    const onBlurInput = (e) => {\r\n        formValidator(e.target.name, nameValue, phoneNumberValue, formErrors, setFormErrors)\r\n    }\r\n\r\n    const resetFormError = () => {\r\n        setFormErrors({nameError: '', phoneNumberError: ''})\r\n    }\r\n\r\n    const onCloseModal = () => {\r\n        setShow(false)\r\n        resetFormError()\r\n        setNameValue('')\r\n        setPhoneNumberValue('')\r\n    }\r\n\r\n    // focus on field<input> without reset value<input>\r\n    const onFocusInput = (name, resetValue = false) => {\r\n        if (name === 'name') {\r\n            if (formErrors.nameError) {\r\n                setFormErrors({...formErrors, nameError: ''})\r\n                if (resetValue) setNameValue('')\r\n            }\r\n\r\n        } else if (name === 'phoneNumber') {\r\n            if (formErrors.phoneNumberError) {\r\n                setFormErrors({...formErrors, phoneNumberError: ''})\r\n                if (resetValue) setPhoneNumberValue('')\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (conditionNameError) {\r\n            formValidator('name', nameValue, phoneNumberValue, formErrors, setFormErrors)\r\n        }\r\n        if (conditionPhoneNumberError) {\r\n            formValidator('phoneNumber', nameValue, phoneNumberValue, formErrors, setFormErrors)\r\n        }\r\n\r\n        if (findError) {\r\n            return\r\n        }\r\n        isDisabledFormButton = true\r\n        let valueForm = `name: ${nameValue}  tel: ${phoneNumberValue}`\r\n        console.log(valueForm)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal closeModalOnClick={onCloseModal} show={show}\r\n            >\r\n                <div className={s.settingModal}>\r\n                    <Item item={currentItem} isModalItems={true}/>\r\n                    <form className={s.settingModalForm} onSubmit={onSubmit}>\r\n                        <div className={s.inputBox}>\r\n                            <Input name={'name'} value={nameValue} type={'text'}\r\n                                   error={formErrors.nameError}\r\n                                   onChangeText={setNameValue} placeholder={'Name'}\r\n                                   onFocusInput={onFocusInput} onBlur={onBlurInput}\r\n                            />\r\n                            <Input name={'phoneNumber'} value={phoneNumberValue} type={'text'}\r\n                                   error={formErrors.phoneNumberError}\r\n                                   onChangeText={setPhoneNumberValue} placeholder={'Number'}\r\n                                   onFocusInput={onFocusInput} onBlur={onBlurInput}\r\n                            />\r\n                        </div>\r\n                        <button className={s.buttonFormSubmit} disabled={isDisabledFormButton}\r\n                                type={'submit'}>order\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n})","import React from 'react';\r\nimport s from './ErrorSnackbar.module.css'\r\n\r\nexport const ErrorSnackbar = React.memo(({error}) => {\r\n\r\n    return (\r\n        <div className={s.styleSnackbar}>\r\n            {error}\r\n        </div>\r\n    )\r\n})\r\n","import React, {useState} from 'react';\nimport {ItemsViewContainer} from '../features/items/ItemsViewContainer';\nimport {ModalBuy} from '../features/modals/ModalBuy';\nimport {useSelector} from 'react-redux';\nimport {ErrorSnackbar} from '../common/error-snackbar/ErrorSnackbar';\nimport {appSelectors} from '../../bll/app-reducer';\n\nconst App = () => {\n    const appError = useSelector(appSelectors.selectorError)\n\n    const [currentItem, setCurrentItem] = useState({})\n    const [showModalBuy, setShowModalBuy] = useState(false)\n\n    const onShowModal = (item) => {\n        setCurrentItem(item)\n        setShowModalBuy(true)\n    }\n\n    return (\n        <div>\n            <ItemsViewContainer show={showModalBuy} onShowModal={onShowModal}/>\n            <ModalBuy currentItem={currentItem} show={showModalBuy} setShow={setShowModalBuy}/>\n            {appError && <ErrorSnackbar error={appError}/>}\n        </div>\n\n    );\n}\n\nexport default App;\n\n","import {combineReducers} from 'redux';\r\nimport {appReducer} from '../app-reducer';\r\nimport {itemsReducer} from '../items-reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    app: appReducer,\r\n    items: itemsReducer,\r\n})\r\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport {rootReducer} from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().prepend(thunk)\r\n})\r\n\r\nwindow.store = store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ui/app/App';\nimport {store} from './bll/store/store';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store} >\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemBox\":\"Item_itemBox__2hTz6\",\"styleModalItems\":\"Item_styleModalItems__2N6Hv\",\"blockWithButton\":\"Item_blockWithButton__e-TCS\",\"priceBox\":\"Item_priceBox__3-eZi\",\"logoPrice\":\"Item_logoPrice__22XQc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"generalInput\":\"Input_generalInput__3ntK5\",\"errorInput\":\"Input_errorInput__1Ed5l\",\"inputContainer\":\"Input_inputContainer__2J4Wu\",\"textError\":\"Input_textError__IPbg4\",\"closeError\":\"Input_closeError__10Wsa\"};"],"sourceRoot":""}